{"version":3,"sources":["components/PostWithOptions/index.module.scss","components/UniversitiesAddForeign/index.module.scss","components/PostForm/index.module.scss","components/PostsIndex/index.module.scss","components/LateralMenu/LateralMenuSection.module.scss","pages/Universities/index.module.scss","pages/Users/index.module.scss","components/LateralMenu/index.module.scss","pages/Index/index.js","helpers/getFileContent.js","pages/Users/index.js","contexts/BaseContext.js","contexts/PostsContext.js","services/settings.js","helpers/getFormDataFromObj.js","services/getFromAPI.js","hooks/usePosts.js","helpers/generateRandomNumber.js","services/deletePost.js","components/PostWithOptions/images/delete_icon.png","components/PostWithOptions/images/edit_icon.png","components/PostWithOptions/index.js","components/PostsIndex/index.js","components/PostForm/index.js","components/PostsNewPost/index.js","services/getPost.js","components/PostEditPost/index.js","pages/Posts/index.js","components/ProfessionsIndex/index.js","pages/Professions/index.js","contexts/UniversitiesContext.js","hooks/useUniversities.js","components/UniversitiesWithOptions/index.js","services/getPaises.js","services/getCarreras.js","components/UniversitiesAddForeign/index.js","helpers/addFileListToFD.js","components/UniversitiesAddBasicProfile/index.js","components/UniversitiesAddNationalUniversity/index.js","components/UniversitiesConvertBasicsProfile/index.js","components/UniversitiesAddPensum/index.js","helpers/ManageYTLinks.js","components/UniversitiesUpdateInfo/index.js","pages/Universities/index.js","contexts/CareersContext.js","contexts/UsersContext.js","App.js","reportWebVitals.js","components/LateralMenu/LateralMenuSection.js","components/LateralMenu/index.js","helpers/getDisplayName.js","HOCs/withLateralMenu.js","index.js"],"names":["module","exports","Index","file","a","ReadExcel","then","f","h","shift","objs","forEach","el","obj","el2","i","push","getFileContent","mySwal","withReactContent","Swal","Users","fileRef","useRef","handleSubmitForm","e","preventDefault","current","files","c","showLoading","fetch","method","headers","body","JSON","stringify","res","json","fire","title","html","styles","listStyle","success","failed","existingEmails","className","users","onClick","onSubmit","type","name","ref","showConfirmButton","BaseContext","Context","children","additionalValues","useState","content","setContent","loaded","setLoaded","_setContent","Provider","value","createContext","PostsContextProvider","API_URL","getFormDataFromObj","Error","keys","Object","fd","FormData","key","append","data","values","catch","err","error","msg","getFromAPI","usePosts","useContext","PostsContext","useEffect","posts","setPosts","postsLoaded","randomNumber","min","max","Math","floor","random","id","message","deletePost","PostWithOptions","post","onPostDeleted","useHistory","pathname","useLocation","formatDate","date","split","reverse","join","image","src","alt","info","entradilla","dates","created","updated","action","deleteIcon","icon","text","showCancelButton","cancelButtonText","cancelButtonColor","confirmButtonText","confirmButtonColor","isConfirmed","editIcon","trim","replaceAll","toLowerCase","state","PostsIndex","path","match","action_buttoms","to","map","idx","_posts","slice","splice","handlePostDeleted","PostForm","update","postInfo","setTitle","setEntradilla","undefined","setImage","setPost","tags","setTags","seccion","setSeccion","editor","imgPreview","length","URL","createObjectURL","generateRandomNumber","post_form","InputWithLabel","onChange","d","inputElement","target","accept","config","readonly","onBlur","nc","required","style","marginBottom","successMessage","input_label","label","autoComplete","onInput","input","NewPost","getPost","EditPost","useParams","Posts","exact","component","ProfessionsIndex","handleSubmit","excel","professions","encType","Professions","UniversitiesContextProvider","useUniversities","UniversitiesContext","universities","setUniversities","universitiesLoaded","UniversitiesWithOptions","university","getPaises","getCarreras","AddForeignUniversitie","profesiones","setInfo","paises","setPaises","carreras","setCarreras","previewCampusRef","previewLogoRef","handleCarreraClicked","dataset","_","checked","findIndex","val","parseInt","s","updateState","fieldName","css","Form","console","log","fields_container","formFields","Group","Label","Control","as","rows","placeholder","dataName","Text","color","valorInput","document","querySelectorAll","car_label","textContent","indexOf","display","data-id","id_carrera","nombre_carrera","id_pais","nombre_pais","reader","FileReader","readAsDataURL","onload","createElement","result","innerHTML","campus","marginTop","logo","Button","variant","addFileListToFD","FileList","UniversitiesAddBasicProfile","pais","setPais","logos","setLogos","setCampus","archivo","setArchivo","Select","aria-label","multiple","UniversitiesAddNationalProfile","universidades","setUniversidades","u","setU","id_universidad","nombre_universidad","ConvertBasicProfile","UniversitiesAddPensum","universidad","setUniversidad","pensums","setPensums","controlId","isYTLink","getYTCode","url","urlSplitted","end","variablesString","variables","UniversitiesUpdateInfo","Fields","carrerasHeaders","j","universidad_actualizada","hasOwnProperty","universidad_error","actualizadas","errores","Universities","openPopup","Component","buttons","CareersContextProvider","UsersContextProvider","App","props","padding","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","LateralMenuSection","details","isInPath","itsExactPath","linkClasses","section","disabled_link","active","LateralMenu","menu","SECTIONS","sec","getDisplayName","displayName","withLateralMenu","AppWithLateralMenu","WithLateralMenu","maxHeight","minHeight","overflow","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.084b314c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"PostWithOptions_post__3evis\",\"image\":\"PostWithOptions_image__1hV8O\",\"info\":\"PostWithOptions_info__uRXRv\",\"title\":\"PostWithOptions_title__3tK1F\",\"entradilla\":\"PostWithOptions_entradilla__1xuva\",\"dates\":\"PostWithOptions_dates__nYvmn\",\"action\":\"PostWithOptions_action__3EAF3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fields_container\":\"UniversitiesAddForeign_fields_container__1a8f8\",\"carreras\":\"UniversitiesAddForeign_carreras__1BXEK\",\"car_label\":\"UniversitiesAddForeign_car_label__6CTmQ\",\"image\":\"UniversitiesAddForeign_image__3RmAz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_form\":\"PostForm_post_form__1PIy9\",\"input_label\":\"PostForm_input_label__19hqo\",\"label\":\"PostForm_label__1qLut\",\"input\":\"PostForm_input__7S9oF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"PostsIndex_posts__8RnJl\",\"action_buttoms\":\"PostsIndex_action_buttoms__1rHmf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"LateralMenuSection_section__1POgK\",\"active\":\"LateralMenuSection_active__3XLx9\",\"disabled_link\":\"LateralMenuSection_disabled_link__2jVe0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"Universities_buttons__-N2FR\",\"universities\":\"Universities_universities__1Npcf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__3Gl4k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"LateralMenu_menu__32ncj\"};","function Index() {\r\n  return <div></div>;\r\n}\r\nexport default Index;\r\n","import ReadExcel from \"read-excel-file\";\r\n\r\nasync function getFileContent(file) {\r\n  return ReadExcel(file).then(function (f) {\r\n    const h = f.shift();\r\n\r\n    let objs = [];\r\n    f.forEach((el) => {\r\n      let obj = {};\r\n      el.forEach((el2, i) => {\r\n        obj[h[i]] = el2;\r\n      });\r\n      objs.push(obj);\r\n    });\r\n    return objs;\r\n  });\r\n}\r\nexport default getFileContent;\r\n","import { useRef } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport getFileContent from \"helpers/getFileContent\";\r\n\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst mySwal = withReactContent(Swal);\r\nfunction Users() {\r\n  const fileRef = useRef();\r\n\r\n  function handleAddColege() {\r\n    mySwal.fire({\r\n      html: (\r\n        <>\r\n          <form onSubmit={handleSubmitForm}>\r\n            <input type=\"file\" name=\"file\" ref={fileRef} />\r\n            <button type=\"submit\">Enviar</button>\r\n          </form>\r\n        </>\r\n      ),\r\n      showConfirmButton: false,\r\n    });\r\n  }\r\n\r\n  function handleSubmitForm(e) {\r\n    e.preventDefault();\r\n    const file = fileRef.current.files[0];\r\n    getFileContent(file).then((c) => {\r\n      mySwal.showLoading();\r\n      fetch(\"http://universidadesyprofesiones.com/api/add_school\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ file: c }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          mySwal.fire({\r\n            title: \"Usuarios procesados\",\r\n            html: (\r\n              <>\r\n                <ul styles={{ listStyle: \"none\" }}>\r\n                  <li>Usuarios registrados: {res.success}</li>\r\n                  <li>Usuarios fallidos: {res.failed}</li>\r\n                  {res.failed !== 0 && (\r\n                    <li>Usuarios existentes: {res.existingEmails}</li>\r\n                  )}\r\n                </ul>\r\n              </>\r\n            ),\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className={styles.users}>\r\n      <button onClick={handleAddColege}>Agregar colegio </button>\r\n    </div>\r\n  );\r\n}\r\nexport default Users;\r\n","import { useState } from \"react\";\r\n\r\n/**\r\n * Crea un objeto contexto con los estados básicos ya creados y algunos valores adicionales\r\n *\r\n * @param {React.Context<{}>} Context El objeto del contexto a ser creado.\r\n * @param {React.ReactElement} children The content that will be inside de Context.Provider\r\n * @param {{}} [additionalValues] Valores adicionales a ser agregados al contexto\r\n * @returns El objeto Context ya creado\r\n */\r\nfunction BaseContext(Context, children, additionalValues = {}) {\r\n  const [content, setContent] = useState([]);\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  function _setContent(content) {\r\n    setContent(content);\r\n    if (!loaded) setLoaded(true);\r\n  }\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        content,\r\n        setContent: _setContent,\r\n        loaded,\r\n        ...additionalValues,\r\n      }}\r\n    >\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n}\r\nexport default BaseContext;\r\n","import { createContext } from \"react\";\r\nimport BaseContext from \"./BaseContext\";\r\n\r\nconst Context = createContext([]);\r\n\r\nexport function PostsContextProvider({ children }) {\r\n  const PostsContext = BaseContext(Context, children);\r\n  return PostsContext;\r\n}\r\n\r\nexport default Context;\r\n","export const API_URL =\r\n  process.env.NODE_ENV === \"production\"\r\n    ? \"https://universidadesyprofesiones.com\"\r\n    : \"http://127.0.0.1:8000\";\r\n","/**\r\n * Devuelve un objeto tipo FormData a partir de un objeto JSON\r\n *\r\n * @param {{}} obj Objeto que será convertido en un elemento del tipo FormData\r\n * @returns FormData\r\n */\r\nfunction getFormDataFromObj(obj) {\r\n  if (typeof obj !== \"object\") {\r\n    throw new Error(\r\n      `Se espara un objeto como parámetro. Se está recibiendo un elemento de tipo ${typeof obj}`\r\n    );\r\n  }\r\n\r\n  const keys = Object.keys(obj);\r\n  const fd = new FormData();\r\n  keys.forEach((key) => {\r\n    fd.append(key, obj[key]);\r\n  });\r\n  return fd;\r\n}\r\nexport default getFormDataFromObj;\r\n","import { API_URL } from \"./settings\";\r\nimport getFormDataFromObj from \"helpers/getFormDataFromObj\";\r\n\r\n/**\r\n * Ejecuta una consulta a la API de UP\r\n *\r\n * @param {string} file Nombre del archivo al que se referencia en la API\r\n * @param {{}} data Los datos que se mandaran en la petición\r\n * @returns El resultado de la API\r\n */\r\nasync function getFromAPI(file, data = {}) {\r\n  return fetch(`${API_URL}/api/${file}`, {\r\n    method: \"POST\",\r\n    body: getFormDataFromObj(data),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((res) => Object.values(res))\r\n    .catch((err) => ({\r\n      error: true,\r\n      msg: err,\r\n    }));\r\n}\r\nexport default getFromAPI;\r\n","import { useEffect, useContext } from \"react\";\r\nimport PostsContext from \"contexts/PostsContext\";\r\n\r\nimport getFromAPI from \"services/getFromAPI\";\r\n\r\nfunction usePosts() {\r\n  const { content, setContent, loaded } = useContext(PostsContext);\r\n\r\n  useEffect(() => {\r\n    getFromAPI(\"get_posts\").then((res) => {\r\n      setContent(res);\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return {\r\n    posts: content,\r\n    setPosts: setContent,\r\n    postsLoaded: loaded,\r\n  };\r\n}\r\nexport default usePosts;\r\n","function randomNumber(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\nexport default randomNumber;\r\n","import { API_URL } from \"./settings\";\r\nimport getFormDataFromObj from \"helpers/getFormDataFromObj\";\r\n\r\nasync function deletePost(id) {\r\n  const fd = getFormDataFromObj({\r\n    id,\r\n  });\r\n\r\n  return fetch(`${API_URL}/api/delete_post`, {\r\n    method: \"POST\",\r\n    body: fd,\r\n  })\r\n    .then((res) => res.json())\r\n    .catch((err) => ({\r\n      success: false,\r\n      message: err,\r\n    }));\r\n}\r\nexport default deletePost;\r\n","export default __webpack_public_path__ + \"static/media/delete_icon.bd21180d.png\";","export default __webpack_public_path__ + \"static/media/edit_icon.3f69390c.png\";","import { useHistory, useLocation } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { API_URL } from \"services/settings\";\r\nimport randomNumber from \"helpers/generateRandomNumber\";\r\nimport deletePost from \"services/deletePost\";\r\n\r\nimport styles from \"./index.module.scss\";\r\nimport deleteIcon from \"./images/delete_icon.png\";\r\nimport editIcon from \"./images/edit_icon.png\";\r\n\r\nfunction PostWithOptions({ post, onPostDeleted }) {\r\n  const { push } = useHistory();\r\n  const { pathname } = useLocation();\r\n\r\n  function formatDate(date) {\r\n    return date.split(\"-\").reverse().join(\"/\");\r\n  }\r\n\r\n  function handleEditClick() {\r\n    const title = post[\"title\"].trim().replaceAll(\" \", \"-\").toLowerCase();\r\n    push({\r\n      pathname: `${pathname}/edit/${title}`,\r\n      state: {\r\n        post,\r\n      },\r\n    });\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    Swal.fire({\r\n      icon: \"warning\",\r\n      title: \"¿Estás seguro?\",\r\n      text: `Estás a punto de eliminar el post: ${post[\"title\"]}`,\r\n      showCancelButton: true,\r\n      cancelButtonText: \"No eliminar\",\r\n      cancelButtonColor: \"green\",\r\n      confirmButtonText: \"Eliminar\",\r\n      confirmButtonColor: \"red\",\r\n    }).then((res) => {\r\n      if (res.isConfirmed) {\r\n        Swal.showLoading();\r\n        deletePost(post[\"id_post\"]).then((res) => {\r\n          if (res.success) {\r\n            Swal.fire({\r\n              icon: \"success\",\r\n              title: \"Post eliminado con éxito\",\r\n            });\r\n            onPostDeleted();\r\n          } else {\r\n            Swal.fire({\r\n              icon: \"error\",\r\n              title: \"Hubo un problema tratando de eliminar el post\",\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className={styles.post}>\r\n      <div className={styles.image}>\r\n        <img\r\n          src={`${API_URL}/images/posts/post/${post[\"image\"]}?${randomNumber(\r\n            10000,\r\n            99999\r\n          )}`}\r\n          alt=\"Posts\"\r\n        />\r\n      </div>\r\n      <div className={styles.info}>\r\n        <div className={styles.title}>{post[\"title\"]}</div>\r\n        <div className={styles.entradilla}>{post[\"entradilla\"]}</div>\r\n        <div className={styles.dates}>\r\n          <div className={styles.created}>\r\n            Publicada: {formatDate(post[\"created_at\"].split(\" \")[0])}\r\n          </div>\r\n          <div className={styles.updated}>\r\n            Última actualización: {formatDate(post[\"updated_at\"].split(\" \")[0])}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={styles.action}>\r\n        <img src={deleteIcon} alt=\"Delete icon\" onClick={handleDeleteClick} />\r\n        <img src={editIcon} alt=\"Edit icon\" onClick={handleEditClick} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default PostWithOptions;\r\n","import { Link } from \"react-router-dom\";\r\nimport usePosts from \"hooks/usePosts\";\r\nimport PostWithOptions from \"components/PostWithOptions\";\r\n\r\nimport styles from \"./index.module.scss\";\r\n\r\nfunction PostsIndex({ match: { path } }) {\r\n  const { posts, setPosts } = usePosts();\r\n\r\n  function handlePostDeleted(idx) {\r\n    const _posts = posts.slice();\r\n    _posts.splice(idx, 1);\r\n    setPosts(_posts);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.posts}>\r\n      <div className={styles.action_buttoms}>\r\n        <Link to={`${path}/new`}>Hacer publicación nueva</Link>\r\n      </div>\r\n      <div className={styles.posts}>\r\n        {posts.map((post, idx) => (\r\n          <PostWithOptions\r\n            key={idx}\r\n            post={post}\r\n            onPostDeleted={() => handlePostDeleted(idx)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default PostsIndex;\r\n","import { useState, useRef, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { API_URL } from \"services/settings\";\r\nimport generateRandomNumber from \"helpers/generateRandomNumber\";\r\n\r\nimport styles from \"./index.module.scss\";\r\n\r\nfunction PostForm({ update, postInfo = {} }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [entradilla, setEntradilla] = useState(\"\");\r\n  const [image, setImage] = useState(undefined);\r\n  const [post, setPost] = useState(\"\");\r\n  const [tags, setTags] = useState(\"\");\r\n  const [seccion, setSeccion] = useState(\"Actualidad universitaria\");\r\n  const { push } = useHistory();\r\n  const editor = useRef(null);\r\n  const imgPreview = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const itsEmpty = !Object.keys(postInfo).length;\r\n    if (!itsEmpty) {\r\n      setTitle(postInfo[\"title\"]);\r\n      setEntradilla(postInfo[\"entradilla\"]);\r\n      setImage(postInfo[\"image\"]);\r\n      setPost(postInfo[\"post\"]);\r\n      setTags(postInfo[\"tags\"]);\r\n    }\r\n  }, [postInfo]);\r\n\r\n  useEffect(() => {\r\n    if (typeof image === \"object\") {\r\n      imgPreview.current.src = URL.createObjectURL(image);\r\n    } else if (typeof image === \"string\") {\r\n      imgPreview.current.src = `${API_URL}/images/posts/post/${\r\n        postInfo[\"image\"]\r\n      }?${generateRandomNumber(10000, 99999)}`;\r\n    }\r\n  }, [image, postInfo]);\r\n\r\n  function sendPost() {\r\n    const fd = new FormData();\r\n    fd.append(\"title\", title);\r\n    fd.append(\"entradilla\", entradilla);\r\n    fd.append(\"image\", image);\r\n    fd.append(\"post\", post);\r\n    fd.append(\"tags\", tags);\r\n    fd.append(\"seccion\", seccion);\r\n\r\n    let file = \"add_post\";\r\n    if (update) {\r\n      file = \"update_post\";\r\n      fd.append(\"post_id\", postInfo[\"id_post\"]);\r\n    }\r\n\r\n    const successMessage = update\r\n      ? \"Publicación actualizada con éxito\"\r\n      : \"Publicación creada con éxito\";\r\n\r\n    Swal.showLoading();\r\n    fetch(`${API_URL}/api/${file}`, {\r\n      method: \"POST\",\r\n      body: fd,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        Swal.fire({\r\n          icon: res.success ? \"success\" : \"error\",\r\n          text: res.success ? successMessage : res.message,\r\n        }).then(() => {\r\n          push(\"/posts\");\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          text: `Ha ocurrido un error inesperado del lado del servidor: ${err}`,\r\n        });\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className={styles.post_form}>\r\n      <InputWithLabel\r\n        title=\"Título\"\r\n        onChange={(d) => setTitle(d)}\r\n        value={title}\r\n      />\r\n      <InputWithLabel\r\n        title=\"Entradilla\"\r\n        onChange={(d) => setEntradilla(d)}\r\n        value={entradilla}\r\n      />\r\n      <InputWithLabel\r\n        title=\"Imagen\"\r\n        inputElement={\r\n          <input\r\n            type=\"file\"\r\n            onChange={(e) => setImage(e.target.files[0])}\r\n            accept=\"image/*\"\r\n          />\r\n        }\r\n      />\r\n      {image && <img src=\"\" alt=\"Preview\" ref={imgPreview} />}\r\n      <InputWithLabel\r\n        title=\"Post\"\r\n        inputElement={\r\n          <JoditEditor\r\n            ref={editor}\r\n            value={post}\r\n            config={{\r\n              readonly: false, // all options from https://xdsoft.net/jodit/doc/\r\n            }}\r\n            onBlur={(nc) => setPost(nc)}\r\n          />\r\n        }\r\n      />\r\n      <label>Seleccione una sección para la noticias</label>\r\n      <br />\r\n      <select\r\n        required\r\n        onChange={(d) => setSeccion(d.target.value)}\r\n        style={{\r\n          marginBottom: \"25px\",\r\n        }}\r\n      >\r\n        <option value=\"Actualidad universitaria\">\r\n          Actualidad universitaria\r\n        </option>\r\n        <option value=\"Noticias interes\">Noticias interes</option>\r\n      </select>\r\n      <InputWithLabel title=\"Tags\" onChange={(d) => setTags(d)} value={tags} />\r\n      <button onClick={sendPost}>\r\n        {update ? \"Actualizar publicación\" : \"Crear publicación\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default PostForm;\r\n\r\nfunction InputWithLabel({ title, inputElement, onChange, value }) {\r\n  return (\r\n    <div className={styles.input_label}>\r\n      <label className={styles.label}>{title}</label>\r\n      {inputElement || (\r\n        <input\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          onInput={(e) => onChange(e.target.value)}\r\n          className={styles.input}\r\n          value={value}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import PostForm from \"components/PostForm\";\r\n\r\nfunction NewPost() {\r\n  return <PostForm />;\r\n}\r\nexport default NewPost;\r\n","import { API_URL } from \"./settings\";\r\n\r\nfunction getPost(title) {\r\n  const fd = new FormData();\r\n  fd.append(\"title\", title);\r\n\r\n  return fetch(`${API_URL}/get_post.php`, {\r\n    method: \"POST\",\r\n    body: fd,\r\n  })\r\n    .then((res) => res.json())\r\n    .catch((err) => ({\r\n      success: false,\r\n      message: err,\r\n    }));\r\n}\r\nexport default getPost;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useLocation, useParams, useHistory } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport PostForm from \"../PostForm\";\r\nimport getPost from \"services/getPost\";\r\n\r\nfunction EditPost() {\r\n  const [post, setPost] = useState();\r\n  const { state } = useLocation();\r\n  const { title } = useParams();\r\n  const { push } = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!state || !state.post) {\r\n      getPost(title).then((res) => {\r\n        if (res.success) {\r\n          setPost(res.post);\r\n          return;\r\n        }\r\n\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          text: `No se pudo cargar el post a editar: ${res.message}`,\r\n        }).then(() => {\r\n          push(\"/posts\");\r\n        });\r\n      });\r\n      return;\r\n    }\r\n    setPost(state.post);\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return <PostForm update postInfo={post} />;\r\n}\r\nexport default EditPost;\r\n","import { Switch, Route } from \"react-router-dom\";\r\nimport Index from \"components/PostsIndex\";\r\nimport NewPost from \"components/PostsNewPost\";\r\nimport EditPost from \"components/PostEditPost\";\r\n\r\nfunction Posts({ match: { path } }) {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={path} component={Index} />\r\n      <Route path={`${path}/new`} component={NewPost} />\r\n      <Route path={`${path}/edit/:title`} component={EditPost} />\r\n    </Switch>\r\n  );\r\n}\r\nexport default Posts;\r\n","import { useRef } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport ReadExcel from \"read-excel-file\";\r\n\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst mySwal = withReactContent(Swal);\r\nfunction ProfessionsIndex() {\r\n  const fileRef = useRef();\r\n\r\n  function handleAddFile() {\r\n    mySwal.fire({\r\n      html: (\r\n        <>\r\n          <form\r\n            onSubmit={handleSubmit}\r\n            encType=\"multipart/form-data\"\r\n            method=\"POST\"\r\n          >\r\n            <input type=\"file\" name=\"file\" id=\"file\" ref={fileRef} />\r\n            <br />\r\n            <button type=\"submit\">Enviar</button>\r\n          </form>\r\n        </>\r\n      ),\r\n      showConfirmButton: false,\r\n    });\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const excel = fileRef.current.files[0];\r\n    ReadExcel(excel).then((res) => {\r\n      const headers = res.shift();\r\n      let success = 0;\r\n      res.forEach((el) => {\r\n        let obj = {};\r\n        el.forEach((info, i) => {\r\n          obj[headers[i]] = info;\r\n        });\r\n\r\n        fetch(\"https://universidadesyprofesiones.com/api/prof_masivo\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(obj),\r\n        })\r\n          .then((res) => res.json())\r\n          .then((res) => {\r\n            if (res.success) success++;\r\n          });\r\n      });\r\n\r\n      Swal.fire({\r\n        title: \"Subida completa\",\r\n        text: `Subidas: ${success}/${res.length}`,\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className={styles.professions}>\r\n      <button onClick={handleAddFile}>Agregar archivo</button>\r\n    </div>\r\n  );\r\n}\r\nexport default ProfessionsIndex;\r\n","import { Switch, Route } from \"react-router-dom\";\r\nimport ProfessionsIndex from \"components/ProfessionsIndex\";\r\n\r\nfunction Professions({ match: { path } }) {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={path} component={ProfessionsIndex} />\r\n    </Switch>\r\n  );\r\n}\r\nexport default Professions;\r\n","import { createContext } from \"react\";\r\nimport BaseContext from \"./BaseContext\";\r\n\r\nconst Context = createContext([]);\r\n\r\nexport function UniversitiesContextProvider({ children }) {\r\n  const context = BaseContext(Context, children);\r\n  return context;\r\n}\r\n\r\nexport default Context;\r\n","import { useEffect, useContext } from \"react\";\r\nimport UniversitiesContext from \"contexts/UniversitiesContext\";\r\n\r\nimport getFromAPI from \"services/getFromAPI\";\r\n\r\nfunction useUniversities() {\r\n  const { content, setContent, loaded } = useContext(UniversitiesContext);\r\n\r\n  useEffect(() => {\r\n    getFromAPI(\"universidades\").then((res) => {\r\n      setContent(res);\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return {\r\n    universities: content,\r\n    setUniversities: setContent,\r\n    universitiesLoaded: loaded,\r\n  };\r\n}\r\nexport default useUniversities;\r\n","function UniversitiesWithOptions({ university }) {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img src={university[\"nombre_universidad\"]} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default UniversitiesWithOptions;\r\n","import getFromAPI from \"./getFromAPI\";\r\n\r\nfunction getPaises() {\r\n  return getFromAPI(\"paises\");\r\n}\r\nexport default getPaises;\r\n","import getFromAPI from \"./getFromAPI\";\r\n\r\nfunction getCarreras() {\r\n  return getFromAPI(\"profesiones\");\r\n}\r\nexport default getCarreras;\r\n","import { useState, useRef, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport getFromAPI from \"services/getFromAPI\";\r\nimport getPaises from \"services/getPaises\";\r\nimport getCarreras from \"services/getCarreras\";\r\n\r\nimport styles from \"./index.module.scss\";\r\n\r\nfunction AddForeignUniversitie() {\r\n  const [info, setInfo] = useState({\r\n    profesiones: [],\r\n  });\r\n  const [paises, setPaises] = useState([]);\r\n  const [carreras, setCarreras] = useState([]);\r\n  const previewCampusRef = useRef();\r\n  const previewLogoRef = useRef();\r\n\r\n  useEffect(() => {\r\n    getCarreras().then((res) => {\r\n      setCarreras(res);\r\n    });\r\n    getPaises().then((res) => {\r\n      setPaises(res);\r\n    });\r\n  }, []);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    getFromAPI(\"create_universidad\", info).then((res) => {\r\n      console.log(res);\r\n    });\r\n  }\r\n\r\n  function handleCampusChange(e) {\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(e.target.files[0]);\r\n    reader.onload = function () {\r\n      let image = document.createElement(\"img\");\r\n      image.src = reader.result;\r\n      previewCampusRef.current.innerHTML = \"\";\r\n      previewCampusRef.current.append(image);\r\n    };\r\n    setInfo((state) => ({ ...state, campus: e.target.files[0] }));\r\n  }\r\n\r\n  function handleLogoChange(e) {\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(e.target.files[0]);\r\n    reader.onload = function () {\r\n      let image = document.createElement(\"img\");\r\n      image.src = reader.result;\r\n      previewLogoRef.current.innerHTML = \"\";\r\n      previewLogoRef.current.append(image);\r\n    };\r\n    setInfo((state) => ({ ...state, logo: e.target.files[0] }));\r\n  }\r\n\r\n  function handleCarreraClicked(e) {\r\n    const id = e.target.dataset.id;\r\n    const _ = info.profesiones.slice();\r\n\r\n    if (e.target.checked) {\r\n      _.push(id);\r\n    } else {\r\n      const idx = _.findIndex((val) => parseInt(val) === parseInt(id));\r\n      _.splice(idx, 1);\r\n    }\r\n\r\n    setInfo((s) => ({ ...s, profesiones: _ }));\r\n  }\r\n\r\n  function handleBuscarCarreraChange(e) {\r\n    const valorInput = e.target.value;\r\n    const labels = document.querySelectorAll(`.${styles.car_label}`);\r\n    labels.forEach((val) => {\r\n      const text = val.textContent;\r\n      if (text.indexOf(valorInput) > -1) {\r\n        val.style.display = \"block\";\r\n      } else {\r\n        val.style.display = \"none\";\r\n      }\r\n    });\r\n  }\r\n\r\n  function updateState(fieldName, e) {\r\n    setInfo((state) => ({ ...state, [fieldName]: e.target.value }));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <style>{css}</style>\r\n      <h1>Formulario de registro de universidades extranjeras</h1>\r\n      <br />\r\n      <Form onSubmit={handleSubmit}>\r\n        <div className={styles.fields_container}>\r\n          {formFields.map((val, i) => (\r\n            <Form.Group key={i}>\r\n              <Form.Label>{val.label}</Form.Label>\r\n              <Form.Control\r\n                type={val.type}\r\n                as={val.as}\r\n                rows={val.rows}\r\n                placeholder={val.placeholder}\r\n                value={info[val.dataName]}\r\n                onChange={(e) => updateState(val.dataName, e)}\r\n                required={val.required}\r\n              ></Form.Control>\r\n              {val.required && (\r\n                <Form.Text style={{ color: \"red\" }}>Obligatorio</Form.Text>\r\n              )}\r\n            </Form.Group>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"carreras_container\">\r\n          <h2>Selecciona las carreras que se mostrarán en esta universidad</h2>\r\n          <Form.Control\r\n            onInput={handleBuscarCarreraChange}\r\n            placeholder=\"Ingresa el nombre de la carrera\"\r\n          />\r\n          <br />\r\n          <div className={styles.carreras}>\r\n            {carreras.map((val, i) => (\r\n              <label\r\n                className={styles.car_label}\r\n                id={`car-${i}`}\r\n                name={`car-${i}`}\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  onChange={handleCarreraClicked}\r\n                  data-id={val.id_carrera}\r\n                />\r\n                {val.nombre_carrera}\r\n              </label>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"paises\">\r\n          <h4>Selecciona el país al que pertenece la univeridad</h4>\r\n          <select\r\n            name=\"pais\"\r\n            id=\"pais\"\r\n            onChange={(e) => updateState(\"id_pais\", e)}\r\n            required\r\n          >\r\n            <option>Selecciona un país</option>\r\n            {paises.map((val, i) => (\r\n              <option value={val.id_pais} key={i}>\r\n                {val.nombre_pais}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className={styles.image}>\r\n          <label>Imagen campus: </label>\r\n          <br />\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            id=\"campus\"\r\n            name=\"campus\"\r\n            onChange={handleCampusChange}\r\n          ></input>\r\n          <div\r\n            id=\"preview\"\r\n            style={{ marginTop: \"30px\" }}\r\n            ref={previewCampusRef}\r\n          ></div>\r\n        </div>\r\n        <br />\r\n\r\n        <div className={styles.image}>\r\n          <label>Logo: </label>\r\n          <br />\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            id=\"logo\"\r\n            name=\"logo\"\r\n            onChange={handleLogoChange}\r\n          ></input>\r\n          <div\r\n            id=\"preview\"\r\n            style={{ marginTop: \"30px\" }}\r\n            ref={previewLogoRef}\r\n          ></div>\r\n        </div>\r\n        <br />\r\n\r\n        <Button type=\"submit\" variant=\"success\">\r\n          Crear universidad\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\nexport default AddForeignUniversitie;\r\n\r\nconst css = `\r\n    .swal2-modal {\r\n        width: 60vw !important;\r\n    }\r\n`;\r\n\r\nconst formFields = [\r\n  {\r\n    label: \"Nombre universidad\",\r\n    type: \"text\",\r\n    placeholder: \"Nombre de la universidad\",\r\n    dataName: \"nombre_universidad\",\r\n    required: true,\r\n  },\r\n  {\r\n    label: \"Video presentación\",\r\n    type: \"text\",\r\n    placeholder: \"Video presentación\",\r\n    dataName: \"video_pres\",\r\n    required: true,\r\n  },\r\n  {\r\n    label: \"Descripción\",\r\n    placeholder: \"Descripción de la universidad\",\r\n    as: \"textarea\",\r\n    rows: 7,\r\n    dataName: \"descripcion_uni\",\r\n    required: true,\r\n  },\r\n  {\r\n    label: \"Proceso de admisión\",\r\n    placeholder: \"Proceso de admisión\",\r\n    as: \"textarea\",\r\n    rows: 7,\r\n    dataName: \"proceso_admision\",\r\n    required: true,\r\n  },\r\n  {\r\n    label: \"Link admisión\",\r\n    type: \"text\",\r\n    placeholder: \"Link de redirección del proceso de admisión\",\r\n    dataName: \"link_admision\",\r\n  },\r\n  {\r\n    label: \"Contacto de admisión\",\r\n    placeholder: \"Contacto de admisión\",\r\n    as: \"textarea\",\r\n    rows: 7,\r\n    dataName: \"contacto_admision\",\r\n    required: true,\r\n  },\r\n  {\r\n    label: \"Apoyo financiero\",\r\n    placeholder: \"Apoyo financiero\",\r\n    as: \"textarea\",\r\n    rows: 7,\r\n    dataName: \"apoyo_financiero\",\r\n    required: true,\r\n  },\r\n  {\r\n    label: \"Link de apoyo financiero\",\r\n    type: \"text\",\r\n    placeholder: \"Link de redirección hacía la parte de apoyo financiero\",\r\n    dataName: \"link_apoyo\",\r\n  },\r\n  {\r\n    label: \"Página web\",\r\n    type: \"text\",\r\n    placeholder: \"Página web\",\r\n    dataName: \"web\",\r\n  },\r\n  {\r\n    label: \"Becas\",\r\n    placeholder: \"Becas\",\r\n    as: \"textarea\",\r\n    rows: 7,\r\n    dataName: \"becas\",\r\n  },\r\n  {\r\n    label: \"Link becas\",\r\n    type: \"text\",\r\n    placeholder: \"Link becas\",\r\n    dataName: \"link_becas\",\r\n  },\r\n  {\r\n    label: \"Cursos online\",\r\n    placeholder: \"Cursos online\",\r\n    as: \"textarea\",\r\n    rows: 7,\r\n    dataName: \"cursos_online\",\r\n  },\r\n  {\r\n    label: \"Precio matrícula\",\r\n    type: \"number\",\r\n    placeholder: \"Precio matrícula\",\r\n    dataName: \"matricula_cuotas\",\r\n  },\r\n  {\r\n    label: \"Vida en el campus\",\r\n    placeholder: \"Vida en el campus\",\r\n    as: \"textarea\",\r\n    rows: 7,\r\n    dataName: \"vida_campus\",\r\n  },\r\n  {\r\n    label: \"Lista de reproducción de testimonios\",\r\n    type: \"text\",\r\n    placeholder: \"Lista de reproducción de testimonios\",\r\n    dataName: \"testimonios\",\r\n  },\r\n];\r\n","function addFileListToFD(fd = new FormData(), files = FileList, title = \"\") {\r\n  for (const file of files) {\r\n    fd.append(`${title}[]`, file);\r\n  }\r\n}\r\nexport default addFileListToFD;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport { API_URL } from \"services/settings\";\r\nimport getPaises from \"services/getPaises\";\r\nimport getFileContent from \"helpers/getFileContent\";\r\nimport addFileListToFD from \"helpers/addFileListToFD\";\r\n\r\nconst mySwal = withReactContent(Swal);\r\nfunction UniversitiesAddBasicProfile() {\r\n  const [paises, setPaises] = useState([]);\r\n  const [pais, setPais] = useState(0);\r\n  const [logos, setLogos] = useState([]);\r\n  const [campus, setCampus] = useState([]);\r\n  const [archivo, setArchivo] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getPaises().then((res) => {\r\n      setPaises(res);\r\n    });\r\n  }, []);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (logos.length !== campus.length) {\r\n      Swal.fire({\r\n        title: \"Algo no cuadra...\",\r\n        icon: \"error\",\r\n        text: \"La cantidad de logos no es la misma que la de campus.\",\r\n      }).then(() => {\r\n        mySwal.fire({\r\n          title: \"Formulario universidades básicas\",\r\n          html: <UniversitiesAddBasicProfile></UniversitiesAddBasicProfile>,\r\n          showConfirmButton: false,\r\n        });\r\n      });\r\n      return;\r\n    }\r\n\r\n    getFileContent(archivo[0]).then((res) => {\r\n      const fd = new FormData();\r\n      fd.append(\"id_pais\", pais);\r\n      fd.append(\"universidades\", JSON.stringify(res));\r\n      addFileListToFD(fd, logos, \"logos\");\r\n      addFileListToFD(fd, campus, \"campus\");\r\n\r\n      fetch(`${API_URL}/api/add_basic_u`, {\r\n        method: \"POST\",\r\n        body: fd,\r\n      }).then((res) => {\r\n        if (res.success) {\r\n          Swal.fire({\r\n            title: \"Subida terminada\",\r\n            text: \"Se han subido las universidades correctamente\",\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Group>\r\n        <Form.Label>Selecciona el país de las universidades</Form.Label>\r\n        <Form.Select\r\n          aria-label=\"Paises\"\r\n          onChange={(e) => setPais(e.target.value)}\r\n          required\r\n        >\r\n          <option>Selecciona un país...</option>\r\n          {paises.map((val, i) => (\r\n            <option value={val.id_pais} key={i}>\r\n              {val.nombre_pais}\r\n            </option>\r\n          ))}\r\n        </Form.Select>\r\n      </Form.Group>\r\n\r\n      <br />\r\n      <Form.Group>\r\n        <Form.Label>Archivo</Form.Label>\r\n        <Form.Control\r\n          type=\"file\"\r\n          id=\"archivo\"\r\n          name=\"archivo\"\r\n          onChange={(e) => setArchivo(e.target.files)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n\r\n      <br />\r\n      <Form.Text>\r\n        Para que las universidades se suban correctamente, tanto los logos como\r\n        las fotos del campus deben tener el mismo nombre\r\n      </Form.Text>\r\n      <br />\r\n      <br />\r\n\r\n      <Form.Group>\r\n        <Form.Label>Logos</Form.Label>\r\n        <Form.Control\r\n          type=\"file\"\r\n          id=\"logos\"\r\n          name=\"logos\"\r\n          multiple\r\n          accept=\"image/*\"\r\n          onChange={(e) => setLogos(e.target.files)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n\r\n      <br />\r\n      <Form.Group>\r\n        <Form.Label>Fotos de campus</Form.Label>\r\n        <Form.Control\r\n          type=\"file\"\r\n          id=\"campus\"\r\n          name=\"campus\"\r\n          multiple\r\n          accept=\"image/*\"\r\n          onChange={(e) => setCampus(e.target.files)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n\r\n      <br />\r\n      <Button type=\"submit\" variant=\"success\">\r\n        Subir universidades\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\nexport default UniversitiesAddBasicProfile;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { API_URL } from \"services/settings\";\r\nimport getFileContent from \"helpers/getFileContent\";\r\n\r\nfunction UniversitiesAddNationalProfile() {\r\n  const [archivo, setArchivo] = useState([]);\r\n  const [universidades, setUniversidades] = useState([]);\r\n  const [u, setU] = useState();\r\n\r\n  useEffect(function () {\r\n    fetch(`${API_URL}/api/universidades`, {\r\n      method: \"POST\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => setUniversidades(res));\r\n  }, []);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    getFileContent(archivo[0]).then((res) => {\r\n      const fd = new FormData();\r\n      fd.append(\"u\", u);\r\n      fd.append(\"universidades\", JSON.stringify(res));\r\n\r\n      fetch(`${API_URL}/api/add_profs_to_national`, {\r\n        method: \"POST\",\r\n        body: fd,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          console.log(res);\r\n        });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Group>\r\n        <Form.Select\r\n          aria-label=\"Universidades\"\r\n          onChange={(e) => setU(e.target.value)}\r\n          required\r\n        >\r\n          <option>Selecciona una universidad...</option>\r\n          {universidades.map((val, i) => (\r\n            <option value={val.id_universidad} key={i}>\r\n              {val.nombre_universidad}\r\n            </option>\r\n          ))}\r\n        </Form.Select>\r\n      </Form.Group>\r\n      <br />\r\n      <Form.Group>\r\n        <Form.Label>Añadir archivo</Form.Label>\r\n        <Form.Control\r\n          type=\"file\"\r\n          id=\"archivo\"\r\n          name=\"archivo\"\r\n          onChange={(e) => setArchivo(e.target.files)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n\r\n      <br />\r\n      <Button type=\"submit\" variant=\"success\">\r\n        Subir universidades\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\nexport default UniversitiesAddNationalProfile;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { API_URL } from \"services/settings\";\r\nimport Swal from \"sweetalert2\";\r\nimport getFileContent from \"helpers/getFileContent\";\r\nimport getPaises from \"services/getPaises\";\r\n\r\nfunction ConvertBasicProfile() {\r\n  const [archivo, setArchivo] = useState([]);\r\n  const [pais, setPais] = useState(\"\");\r\n  const [paises, setPaises] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getPaises().then((res) => {\r\n      setPaises(res);\r\n    });\r\n  }, []);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    getFileContent(archivo[0]).then((res) => {\r\n      const fd = new FormData();\r\n      fd.append(\"pais\", pais);\r\n      fd.append(\"universidades\", JSON.stringify(res));\r\n\r\n      fetch(`${API_URL}/api/convert_basics_profile`, {\r\n        method: \"POST\",\r\n        body: fd,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          if (res.success) {\r\n            Swal.fire({\r\n              title: \"Proceso terminado con éxito\",\r\n              icon: \"success\",\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              title: `Algo salió mal: ${res.error}`,\r\n              icon: \"error\",\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          Swal.fire({\r\n            title: `Algo salió mal: ${err}`,\r\n            icon: \"error\",\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Group>\r\n        <Form.Label>Selecciona el país de las universidades</Form.Label>\r\n        <Form.Select\r\n          aria-label=\"Paises\"\r\n          onChange={(e) => setPais(e.target.value)}\r\n          required\r\n        >\r\n          <option>Selecciona un país...</option>\r\n          {paises.map((val, i) => (\r\n            <option value={val.id_pais} key={i}>\r\n              {val.nombre_pais}\r\n            </option>\r\n          ))}\r\n        </Form.Select>\r\n      </Form.Group>\r\n\r\n      <br />\r\n      <Form.Group>\r\n        <Form.Label>Añadir archivo</Form.Label>\r\n        <Form.Control\r\n          type=\"file\"\r\n          id=\"archivo\"\r\n          name=\"archivo\"\r\n          onChange={(e) => setArchivo(e.target.files)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n      <br />\r\n      <Button type=\"submit\">Enviar</Button>\r\n    </Form>\r\n  );\r\n}\r\nexport default ConvertBasicProfile;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { API_URL } from \"services/settings\";\r\nimport Swal from \"sweetalert2\";\r\nimport getFromAPI from \"services/getFromAPI\";\r\nimport addFileListToFD from \"helpers/addFileListToFD\";\r\n\r\nfunction UniversitiesAddPensum() {\r\n  const [universidad, setUniversidad] = useState([]);\r\n  const [pensums, setPensums] = useState([]);\r\n  const [universidades, setUniversidades] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getFromAPI(\"universidades\").then((res) => setUniversidades(res));\r\n  }, []);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const fd = new FormData();\r\n    fd.append(\"universidad\", universidad);\r\n    addFileListToFD(fd, pensums, \"pensums\");\r\n\r\n    Swal.showLoading();\r\n    fetch(`${API_URL}/api/subir_pensums`, {\r\n      method: \"POST\",\r\n      body: fd,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.success) {\r\n          Swal.fire({\r\n            title: \"Proceso terminado con éxito\",\r\n            icon: \"success\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: `Algo salió mal: ${res.error}`,\r\n            icon: \"error\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        Swal.fire({\r\n          title: `Algo salió mal: ${err}`,\r\n          icon: \"error\",\r\n        });\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Group>\r\n        <Form.Label>Selecciona el país de las universidades</Form.Label>\r\n        <Form.Select\r\n          aria-label=\"Paises\"\r\n          onChange={(e) => setUniversidad(e.target.value)}\r\n          required\r\n        >\r\n          <option>Selecciona una universidad...</option>\r\n          {universidades.map((val, i) => (\r\n            <option value={val.id_universidad} key={i}>\r\n              {val.nombre_universidad}\r\n            </option>\r\n          ))}\r\n        </Form.Select>\r\n      </Form.Group>\r\n\r\n      <br />\r\n      <Form.Group controlId=\"formFileMultiple\" className=\"mb-3\">\r\n        <Form.Label>Pensums</Form.Label>\r\n        <Form.Control\r\n          type=\"file\"\r\n          id=\"pensums\"\r\n          name=\"pensums\"\r\n          accept=\"image/*\"\r\n          multiple\r\n          onChange={(e) => setPensums(e.target.files)}\r\n        />\r\n      </Form.Group>\r\n\r\n      <br />\r\n      <Button type=\"submit\">Enviar</Button>\r\n    </Form>\r\n  );\r\n}\r\nexport default UniversitiesAddPensum;\r\n","export function isYTLink(s = \"\") {\r\n  return (\r\n    typeof s === \"string\" &&\r\n    (s.indexOf(\"www.youtube.com\") > -1 || s.indexOf(\"youtu.be\") > -1)\r\n  );\r\n}\r\n\r\nexport function getYTCode(url = \"\") {\r\n  const urlSplitted = url.split(\"/\");\r\n  const end = urlSplitted.slice(-1)[0];\r\n\r\n  if (url.indexOf(\"youtu.be\") > -1) return end;\r\n\r\n  const variablesString = end.split(\"?\")[1];\r\n  const variables = variablesString.split(\"&\");\r\n  for (let i = 0; i < variables.length; i++) {\r\n    const val = variables[i];\r\n    const [key, value] = val.split(\"=\");\r\n    if (key === \"v\") return value;\r\n  }\r\n}\r\n","import { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { API_URL } from \"services/settings\";\r\nimport ReadExcel from \"read-excel-file\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport { isYTLink, getYTCode } from \"helpers/ManageYTLinks\";\r\n\r\nimport Fields from \"./fields.json\";\r\nimport getFormDataFromObj from \"helpers/getFormDataFromObj\";\r\n\r\nconst mySwal = withReactContent(Swal);\r\nfunction UniversitiesUpdateInfo() {\r\n  const [archivo, setArchivo] = useState(null);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    ReadExcel(archivo[0]).then((res) => {\r\n      // Obteniendo informacion de la universidad\r\n      let universidad = {};\r\n      const universidadHeaders = res[0];\r\n      universidadHeaders.forEach((h, i) => {\r\n        const val = res[1][i];\r\n        if (val) universidad[Fields[h]] = isYTLink(val) ? getYTCode(val) : val;\r\n      });\r\n\r\n      // Obteniendo la información de las carreras\r\n      let carreras = [];\r\n      const carrerasHeaders = res[2];\r\n      for (let i = 3; i < res.length; i++) {\r\n        let c = {};\r\n        for (let j = 0; j < 6; j++) {\r\n          const h = carrerasHeaders[j];\r\n          if (!h) continue;\r\n          const val = res[i][j];\r\n          if (val) c[Fields[h]] = isYTLink(val) ? getYTCode(val) : val;\r\n        }\r\n        carreras.push(c);\r\n      }\r\n\r\n      // ENviando información a la API\r\n      const fd = getFormDataFromObj({\r\n        universidad: JSON.stringify(universidad),\r\n        carreras: JSON.stringify(carreras),\r\n      });\r\n\r\n      mySwal.showLoading();\r\n      fetch(`${API_URL}/api/actualizar_universidad`, {\r\n        method: \"POST\",\r\n        body: fd,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          const html = (\r\n            <>\r\n              <div>\r\n                Universidad actualizada:{\" \"}\r\n                {res.universidad_actualizada\r\n                  ? \"Sí\"\r\n                  : `No, ${\r\n                      res.hasOwnProperty(\"universidad_error\")\r\n                        ? res.universidad_error\r\n                        : \"La información que se quería actualizar es igual a la actual\"\r\n                    }`}\r\n              </div>\r\n              <div>\r\n                Carreras actualizadas: {res.carreras.actualizadas}/\r\n                {carreras.length}\r\n                {res.carreras.errores.length > 0 ?? (\r\n                  <ul>\r\n                    {res.carreras.errores.map((val) => (\r\n                      <li>\r\n                        Carrera con id {val.id_carrera}: {val.message}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                )}\r\n              </div>\r\n            </>\r\n          );\r\n\r\n          mySwal.fire({\r\n            icon: \"success\",\r\n            title: \"Proceso finalizado\",\r\n            html,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          mySwal.fire({\r\n            icon: \"error\",\r\n            title: err,\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Group>\r\n        <Form.Label>Añadir archivo</Form.Label>\r\n        <Form.Control\r\n          type=\"file\"\r\n          id=\"archivo\"\r\n          name=\"archivo\"\r\n          onChange={(e) => setArchivo(e.target.files)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n\r\n      <br />\r\n      <Button type=\"submit\">Enviar</Button>\r\n    </Form>\r\n  );\r\n}\r\nexport default UniversitiesUpdateInfo;\r\n","import Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport useUniversities from \"hooks/useUniversities\";\r\nimport Button from \"react-bootstrap/button\";\r\nimport UniversitiesWithOptions from \"components/UniversitiesWithOptions\";\r\nimport AddForeignUniversitie from \"components/UniversitiesAddForeign\";\r\nimport UniversitiesAddBasicProfile from \"components/UniversitiesAddBasicProfile\";\r\nimport UniversitiesAddNationalProfile from \"components/UniversitiesAddNationalUniversity\";\r\nimport UniversitiesConvertBasicProfile from \"components/UniversitiesConvertBasicsProfile\";\r\nimport UniversitiesAddPensum from \"components/UniversitiesAddPensum\";\r\nimport UniversitiesUpdateInfo from \"components/UniversitiesUpdateInfo/index\";\r\n\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst mySwal = withReactContent(Swal);\r\nfunction Universities() {\r\n  const { universities } = useUniversities();\r\n\r\n  function handleAddNationalUniversities() {\r\n    mySwal.fire({\r\n      title: \"Formulario universidades nacionales\",\r\n      html: <UniversitiesAddNationalProfile></UniversitiesAddNationalProfile>,\r\n      showConfirmButton: false,\r\n    });\r\n  }\r\n\r\n  function handleConvertBasicProfile() {\r\n    mySwal.fire({\r\n      title: \"Convertir perfil básico a perfil completo\",\r\n      showConfirmButton: false,\r\n      html: <UniversitiesConvertBasicProfile></UniversitiesConvertBasicProfile>,\r\n    });\r\n  }\r\n\r\n  function openPopup(title, Component) {\r\n    mySwal.fire({\r\n      title,\r\n      html: <Component></Component>,\r\n      showConfirmButton: false,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.buttons}>\r\n        <Button\r\n          variant=\"success\"\r\n          onClick={() => openPopup(\"\", AddForeignUniversitie)}\r\n        >\r\n          Agregar universidad extranjera\r\n        </Button>\r\n        <Button\r\n          variant=\"warning\"\r\n          onClick={() =>\r\n            openPopup(\r\n              \"Formulario universidades básicas\",\r\n              UniversitiesAddBasicProfile\r\n            )\r\n          }\r\n        >\r\n          Agregar universidades básicas por lote\r\n        </Button>\r\n        <Button variant=\"warning\" onClick={handleAddNationalUniversities}>\r\n          Agregar universidades nacionales\r\n        </Button>\r\n        <Button variant=\"warning\" onClick={handleConvertBasicProfile}>\r\n          Perfiles básicos =&gt; Perfiles completos\r\n        </Button>\r\n        <Button\r\n          variant=\"warning\"\r\n          onClick={() => openPopup(\"\", UniversitiesAddPensum)}\r\n        >\r\n          Agregar pensums\r\n        </Button>\r\n        <br />\r\n        <br />\r\n        <Button\r\n          variant=\"warning\"\r\n          onClick={() => openPopup(\"\", UniversitiesUpdateInfo)}\r\n        >\r\n          Actualizar información de universidades\r\n        </Button>\r\n      </div>\r\n      <div className={styles.universities}>\r\n        {universities.map((u, i) => (\r\n          <UniversitiesWithOptions university={u} key={i} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Universities;\r\n","import { createContext } from \"react\";\r\nimport BaseContext from \"./BaseContext\";\r\n\r\nconst Context = createContext([]);\r\n\r\nexport function CareersContextProvider({ children }) {\r\n  const CareersContext = BaseContext(Context, children);\r\n\r\n  return CareersContext;\r\n}\r\n\r\nexport default Context;\r\n","import { createContext } from \"react\";\r\nimport BaseContext from \"./BaseContext\";\r\n\r\nconst Context = createContext([]);\r\n\r\nexport function UsersContextProvider({ children }) {\r\n  return BaseContext(Context, children);\r\n}\r\n\r\nexport default Context;\r\n","import { Switch, Route } from \"react-router-dom\";\nimport Index from \"pages/Index\";\nimport Users from \"pages/Users\";\nimport Posts from \"pages/Posts\";\nimport Professions from \"pages/Professions\";\nimport Universities from \"pages/Universities\";\n\nimport { CareersContextProvider } from \"contexts/CareersContext\";\nimport { UsersContextProvider } from \"contexts/UsersContext\";\nimport { PostsContextProvider } from \"contexts/PostsContext\";\nimport { UniversitiesContextProvider } from \"contexts/UniversitiesContext\";\n\nfunction App(props) {\n  return (\n    <main {...props} style={{ padding: \"25px\" }}>\n      <Switch>\n        <UsersContextProvider>\n          <CareersContextProvider>\n            <UniversitiesContextProvider>\n              <PostsContextProvider>\n                <Route exact path=\"/\" component={Index} />\n                <Route path=\"/posts\" component={Posts} />\n                <Route path=\"/professions\" component={Professions} />\n                <Route path=\"/users\" component={Users} />\n                <Route path=\"/universities\" component={Universities} />\n              </PostsContextProvider>\n            </UniversitiesContextProvider>\n          </CareersContextProvider>\n        </UsersContextProvider>\n      </Switch>\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useLocation, Link } from \"react-router-dom\";\r\n\r\nimport styles from \"./LateralMenuSection.module.scss\";\r\n\r\nfunction LateralMenuSection({ details }) {\r\n  const { name, path } = details;\r\n  const { pathname } = useLocation();\r\n\r\n  const isInPath = pathname.indexOf(path) > -1;\r\n  const itsExactPath = pathname === path;\r\n  const linkClasses = [\r\n    styles.section,\r\n    isInPath && itsExactPath ? styles.disabled_link : undefined,\r\n    isInPath ? styles.active : undefined,\r\n  ];\r\n  return (\r\n    <Link to={path} className={linkClasses.join(\" \")}>\r\n      {name}\r\n    </Link>\r\n  );\r\n}\r\nexport default LateralMenuSection;\r\n","import LateralMenuSection from \"./LateralMenuSection\";\r\n\r\nimport styles from \"./index.module.scss\";\r\n\r\nfunction LateralMenu() {\r\n  return (\r\n    <nav className={styles.menu}>\r\n      {SECTIONS.map((sec, idx) => (\r\n        <LateralMenuSection details={sec} key={idx} />\r\n      ))}\r\n    </nav>\r\n  );\r\n}\r\nexport default LateralMenu;\r\n\r\nconst SECTIONS = [\r\n  { name: \"Publicaciones\", icon: \"\", path: \"/posts\" },\r\n  { name: \"Profesiones\", icon: \"\", path: \"/professions\" },\r\n  { name: \"Usuarios\", icon: \"\", path: \"/users\" },\r\n  { name: \"Universidades\", icon: \"\", path: \"/universities\" },\r\n];\r\n","function getDisplayName(Component) {\r\n  return Component.displayName || Component.name || \"Component\";\r\n}\r\nexport default getDisplayName;\r\n","/* Components */\r\nimport LateralMenu from \"components/LateralMenu\";\r\n\r\n/* Helpers */\r\nimport getDisplayName from \"helpers/getDisplayName\";\r\n\r\nfunction withLateralMenu(Component) {\r\n  function WithLateralMenu(props) {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          maxHeight: \"100vh\",\r\n          minHeight: \"100vh\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        <LateralMenu />\r\n        <Component\r\n          style={{\r\n            width: \"90%\",\r\n            overflow: \"auto\",\r\n          }}\r\n          {...props}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  WithLateralMenu.displayName = `WithLateralMenu(${getDisplayName(Component)})`;\r\n  return WithLateralMenu;\r\n}\r\nexport default withLateralMenu;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport withLateralMenu from \"HOCs/withLateralMenu\";\n\nconst AppWithLateralMenu = withLateralMenu(App);\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <AppWithLateralMenu />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}